import { LexModel } from '../../lex/lex.model'

const pythonConfiguration: LexModel = {
  $keywords: [
    'False',
    'None',
    'True',
    '_',
    'and',
    'as',
    'assert',
    'async',
    'await',
    'break',
    'case',
    'class',
    'continue',
    'def',
    'del',
    'elif',
    'else',
    'except',
    'exec',
    'finally',
    'for',
    'from',
    'global',
    'if',
    'import',
    'in',
    'is',
    'lambda',
    'match',
    'nonlocal',
    'not',
    'or',
    'pass',
    'print',
    'raise',
    'return',
    'try',
    'type',
    'while',
    'with',
    'yield',

    'int',
    'float',
    'long',
    'complex',
    'hex',

    'abs',
    'all',
    'any',
    'apply',
    'basestring',
    'bin',
    'bool',
    'buffer',
    'bytearray',
    'callable',
    'chr',
    'classmethod',
    'cmp',
    'coerce',
    'compile',
    'complex',
    'delattr',
    'dict',
    'dir',
    'divmod',
    'enumerate',
    'eval',
    'execfile',
    'file',
    'filter',
    'format',
    'frozenset',
    'getattr',
    'globals',
    'hasattr',
    'hash',
    'help',
    'id',
    'input',
    'intern',
    'isinstance',
    'issubclass',
    'iter',
    'len',
    'locals',
    'list',
    'map',
    'max',
    'memoryview',
    'min',
    'next',
    'object',
    'oct',
    'open',
    'ord',
    'pow',
    'print',
    'property',
    'reversed',
    'range',
    'raw_input',
    'reduce',
    'reload',
    'repr',
    'reversed',
    'round',
    'self',
    'set',
    'setattr',
    'slice',
    'sorted',
    'staticmethod',
    'str',
    'sum',
    'super',
    'tuple',
    'type',
    'unichr',
    'unicode',
    'vars',
    'xrange',
    'zip',

    '__dict__',
    '__methods__',
    '__members__',
    '__class__',
    '__bases__',
    '__name__',
    '__mro__',
    '__subclasses__',
    '__init__',
    '__import__',
  ],
  $operators: [
    '+',
    '-',
    '*',
    '/',
    '%',
    '**',
    '//',
    '=',
    '+=',
    '-=',
    '*=',
    '/=',
    '%=',
    '**=',
    '//=',
    '&=',
    '|=',
    '^=',
    '>>=',
    '<<=',
    '==',
    '!=',
    '>',
    '<',
    '>=',
    '<=',
    'and',
    'or',
    'not',
    '&',
    '|',
    '^',
    '~',
    '<<',
    '>>',
    'in',
    'not in',
    'is',
    'is not',
  ],
  tokenizer: [
    [/[a-zA-Z_]\w*/g, '$keywords', 'variables'],
    [/'.*'/g, 'string'],
    [/(^#.*$)/g, 'comments'],
  ],
}

export default pythonConfiguration
